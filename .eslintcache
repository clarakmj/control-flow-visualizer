[{"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\index.js":"1","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\reportWebVitals.js":"2","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\App.js":"3","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Footer.jsx":"4","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Header.jsx":"5","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Editor.jsx":"6","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\FlowChart.jsx":"7"},{"size":517,"mtime":1609301800444,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1609301800444,"results":"10","hashOfConfig":"9"},{"size":1426,"mtime":1610096033323,"results":"11","hashOfConfig":"9"},{"size":358,"mtime":1609316278382,"results":"12","hashOfConfig":"9"},{"size":309,"mtime":1609316440351,"results":"13","hashOfConfig":"9"},{"size":3335,"mtime":1610075779277,"results":"14","hashOfConfig":"9"},{"size":1464,"mtime":1610096190632,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1w2oai3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\index.js",[],["33","34"],"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\reportWebVitals.js",[],"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\App.js",[],"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Footer.jsx",["35"],"import React from \"react\";\r\nimport App from \"./App\";\r\n\r\n/***\r\n * Footer component to display dynamic copyright year and names\r\n *\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction Footer() {\r\n    const currentDate = new Date();\r\n    return <p>\r\n        Copyright Â©{currentDate.getFullYear()} Tiger Z & Clara K\r\n    </p>\r\n}\r\n\r\nexport default Footer;","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Header.jsx",[],"C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\Editor.jsx",["36","37","38","39","40","41","42"],"import React, {useState} from 'react';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport diamondTest from \"./images/diamondtest.jpg\"\r\n\r\nconst keywords = [\"if\", \"else\", \"while\", \"for\", \"return\", \"true\", \"false\"]\r\nconst splitter = new RegExp(\"\\s+|\\(|\\)|[;]\") //TODO: make correct RegExp (current one doesn't work)\r\nlet cfDiagram = <img src={diamondTest} alt=\"testing\"/>;\r\n\r\nfunction Editor(props) {\r\n    /***\r\n     * dynamically set the content to current text in editor\r\n     *\r\n     * @param newValue\r\n     */\r\n    function onChange(newValue) {\r\n        props.updateCode(newValue);\r\n    }\r\n\r\n    return (\r\n        <AceEditor\r\n            mode=\"c_cpp\"\r\n            theme=\"monokai\"\r\n            onChange={onChange}\r\n            setOptions={\r\n                {\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    tabSize: 2\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n// class Editor extends React.Component {\r\n//     /***\r\n//      * constructs the Editor with content set to null\r\n//      *\r\n//      * @param props\r\n//      */\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             content: null,\r\n//             words: null\r\n//         };\r\n//         this.onChange = this.onChange.bind(this);\r\n//     }\r\n//\r\n//     onChange(newValue) {\r\n//         this.setState({content: newValue});\r\n//         let content = newValue.toString().split(\" \"); //TODO: replace with splitter\r\n//         let important = [];\r\n//         for (let i = 0; i < content.length; i++) {\r\n//             if (keywords.includes(content[i])) {\r\n//                 important.push(content[i]);\r\n//                 this.setState({words: important})\r\n//                 console.log(this.state.words);\r\n//             }\r\n//         }\r\n//     }\r\n//\r\n//     //TODO: function to take array of strings to convert to an image\r\n//     visualize(content) {\r\n//         const diagram = content.map(() =>\r\n//             <img src={diamondTest}/>\r\n//         );\r\n//         cfDiagram = <div>{diagram}</div>;\r\n//     }\r\n//\r\n//     run() {\r\n//         //TODO: send to node server to compile\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <table class=\"center\">\r\n//                     <AceEditor\r\n//                         mode=\"c_cpp\"\r\n//                         theme=\"monokai\"\r\n//                         onChange={this.onChange}\r\n//                         content={this.state.content}\r\n//                         setOptions={\r\n//                             {\r\n//                                 enableBasicAutocompletion: true,\r\n//                                 enableLiveAutocompletion: true,\r\n//                                 tabSize: 2\r\n//                             }\r\n//                         }\r\n//                     />\r\n//                     {/*cfDiagram*/}\r\n//                 </table>\r\n//                 <button\r\n//                     className=\"run\"\r\n//                     onClick={() => this.visualize(this.state.words)}\r\n//                 >\r\n//                     Run\r\n//                 </button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Editor;","C:\\Users\\TigerZhao\\WebstormProjects\\control-flow-visualizer\\src\\FlowChart.jsx",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"54","line":7,"column":7,"nodeType":"51","messageId":"52","endLine":7,"endColumn":15},{"ruleId":"49","severity":1,"message":"55","line":8,"column":7,"nodeType":"51","messageId":"52","endLine":8,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":8,"column":30,"nodeType":"58","messageId":"59","endLine":8,"endColumn":31,"suggestions":"60"},{"ruleId":"56","severity":1,"message":"61","line":8,"column":34,"nodeType":"58","messageId":"59","endLine":8,"endColumn":35,"suggestions":"62"},{"ruleId":"56","severity":1,"message":"63","line":8,"column":37,"nodeType":"58","messageId":"59","endLine":8,"endColumn":38,"suggestions":"64"},{"ruleId":"49","severity":1,"message":"65","line":9,"column":5,"nodeType":"51","messageId":"52","endLine":9,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":18,"column":12,"nodeType":"68","endLine":18,"endColumn":24,"suggestions":"69"},{"ruleId":"49","severity":1,"message":"70","line":35,"column":14,"nodeType":"51","messageId":"52","endLine":35,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'keywords' is assigned a value but never used.","'splitter' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["73","74"],"Unnecessary escape character: \\(.",["75","76"],"Unnecessary escape character: \\).",["77","78"],"'cfDiagram' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'newEdge' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"80","fix":"81","desc":"82"},{"messageId":"83","fix":"84","desc":"85"},{"messageId":"80","fix":"86","desc":"82"},{"messageId":"83","fix":"87","desc":"85"},{"messageId":"80","fix":"88","desc":"82"},{"messageId":"83","fix":"89","desc":"85"},{"desc":"90","fix":"91"},"removeEscape",{"range":"92","text":"93"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"94","text":"95"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"96","text":"93"},{"range":"97","text":"95"},{"range":"98","text":"93"},{"range":"99","text":"95"},"Update the dependencies array to be: [content, props.text]",{"range":"100","text":"101"},[334,335],"",[334,334],"\\",[338,339],[338,338],[341,342],[341,341],[700,712],"[content, props.text]"]